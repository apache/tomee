classloader.loadedClasses.count.displayName: Current Loaded Class Count
classloader.loadedClasses.count.type: gauge
classloader.loadedClasses.count.unit: none
classloader.loadedClasses.count.description: Displays the number of classes that are currently loaded in the Java virtual machine.
classloader.loadedClasses.count.mbean: java.lang:type=ClassLoading/LoadedClassCount
classloader.loadedClasses.total.displayName: Total Loaded Class Count
classloader.loadedClasses.total.type: counter
classloader.loadedClasses.total.unit: none
classloader.loadedClasses.total.description: Displays the total number of classes that have been loaded since the Java virtual machine has started execution.
classloader.loadedClasses.total.mbean: java.lang:type=ClassLoading/TotalLoadedClassCount
classloader.unloadedClasses.total.displayName: Total Unloaded Class Count
classloader.unloadedClasses.total.type: counter
classloader.unloadedClasses.total.unit: none
classloader.unloadedClasses.total.description: Displays the total number of classes unloaded since the Java virtual machine has started execution.
classloader.unloadedClasses.total.mbean: java.lang:type=ClassLoading/UnloadedClassCount
cpu.availableProcessors.displayName: Available Processors
cpu.availableProcessors.type: gauge
cpu.availableProcessors.unit: none
cpu.availableProcessors.description: Displays the number of processors available to the Java virtual machine. This value may change during a particular invocation of the virtual machine.
cpu.availableProcessors.mbean: java.lang:type=OperatingSystem/AvailableProcessors
cpu.systemLoadAverage.displayName: System Load Average
cpu.systemLoadAverage.type: gauge
cpu.systemLoadAverage.unit: none
cpu.systemLoadAverage.description: Displays the system load average for the last minute. The system load average is the sum of the number of runnable entities queued to the available processors and the number of runnable entities running on the available processors averaged over a period of time. The way in which the load average is calculated is operating system specific but is typically a damped time-dependent average. If the load average is not available, a negative value is displayed. This attribute is designed to provide a hint about the system load and may be queried frequently. The load average may be unavailable on some platform where it is expensive to implement this method.
cpu.systemLoadAverage.mbean: java.lang:type=OperatingSystem/SystemLoadAverage
gc.total.displayName: Garbage Collection Count
gc.total.type: counter
gc.total.unit: none
gc.total.multi: true
gc.total.description:  Displays the total number of collections that have occurred. This attribute lists -1 if the collection count is undefined for this collector.
gc.total.mbean: java.lang:type=GarbageCollector,name=%s/CollectionCount
gc.total.tags: name=%s1
gc.time.displayName: Garbage Collection Time
gc.time.type: counter
gc.time.unit: milliseconds
gc.time.multi: true
gc.time.description: Displays the approximate accumulated collection elapsed time in milliseconds. This attribute displays -1 if the collection elapsed time is undefined for this collector. The Java virtual machine implementation may use a high resolution timer to measure the elapsed time. This attribute may display the same value even if the collection count has been incremented if the collection elapsed time is very short.
gc.time.mbean: java.lang:type=GarbageCollector,name=%s/CollectionTime
gc.time.tags: name=%s1
jvm.uptime.displayName: JVM Uptime
jvm.uptime.type: gauge
jvm.uptime.unit: milliseconds
jvm.uptime.description: Displays the start time of the Java virtual machine in milliseconds. This attribute displays the approximate time when the Java virtual machine started.
jvm.uptime.mbean: java.lang:type=Runtime/Uptime
memory.committedHeap.mbean: java.lang:type=Memory/HeapMemoryUsage#committed
memory.committedHeap.type: gauge
memory.committedHeap.unit: bytes
memory.maxHeap.mbean: java.lang:type=Memory/HeapMemoryUsage#max
memory.maxHeap.description: Number of threads started for this server
memory.maxHeap.unit: bytes
memory.maxHeap.type: gauge
memory.usedHeap.mbean: java.lang:type=Memory/HeapMemoryUsage#used
memory.usedHeap.type: gauge
memory.usedHeap.unit: bytes
thread.count.mbean: java.lang:type=Threading/ThreadCount
thread.count.description: Number of currently deployed threads
thread.count.unit: none
thread.count.type: gauge
thread.count.displayName: Current Thread count
thread.daemon.count.displayName: Daemon Thread Count
thread.daemon.count.type: gauge
thread.daemon.count.unit: none
thread.daemon.count.description: Displays the current number of live daemon threads.
thread.daemon.count.mbean: java.lang:type=Threading/DaemonThreadCount
thread.max.count.displayName: Peak Thread Count
thread.max.count.type: gauge
thread.max.count.unit: none
thread.max.count.description: Displays the peak live thread count since the Java virtual machine started or peak was reset. This includes daemon and non-daemon threads.
thread.max.count.mbean: java.lang:type=Threading/PeakThreadCount
