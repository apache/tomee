<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<!-- $Rev$ $Date$ -->

<ejb-jar xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd"
         version="3.1" metadata-complete="false">

  <description>
    This ejb-jar file contains assembled enterprise beans that are
    part of employee self-service application.
  </description>

  <enterprise-beans>
    <!--
    ########################################################
    ########################################################
    ######  CMP   E N T I T Y   B E A N S  #################
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/BasicCmpHome
    ########################################################
    -->

    <entity>
      <description>
        The EmployeeRecord entity bean encapsulates access
        to the employee records.The deployer will use
        container-managed persistence to integrate the
        entity bean with the back-end system managing
        the employee records.
      </description>
      <ejb-name>BasicCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.BasicCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <abstract-schema-name>BasicCmpBeanX</abstract-schema-name>
      <cmp-field>
        <field-name>primaryKey</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>primaryKey</primkey-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <entity>
      <ejb-name>ComplexCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.ComplexCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.ComplexCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.ComplexCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmp.ComplexCmpBeanPk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <abstract-schema-name>ComplexCmpBeanX</abstract-schema-name>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <entity>
      <ejb-name>UnknownCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.UnknownCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.UnknownCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.UnknownCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Object</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <abstract-schema-name>UnknownCmpBeanX</abstract-schema-name>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/BasicCmpHome
    ########################################################
    -->

    <entity>
      <ejb-name>BasicCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.BasicCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>BasicCmp2Bean</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <query>
        <query-method>
          <method-name>ejbSelectRemoveById</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>DELETE FROM BasicCmp2Bean o WHERE o.id = ?1</ejb-ql>
      </query>
    </entity>

    <entity>
      <ejb-name>ComplexCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.ComplexCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.ComplexCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.ComplexCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmp.ComplexCmpBeanPk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexCmp2Bean</abstract-schema-name>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <entity>
      <ejb-name>UnknownCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.UnknownCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.UnknownCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.UnknownCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Object</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>UnknownCmp2Bean</abstract-schema-name>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <resource-ref>
        <description>This is a reference to a JDBC database.</description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/allowed_operations/EntityHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>AOBasicCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.AllowedOperationsCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <cmp-field>
        <field-name>primaryKey</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>number</field-name>
      </cmp-field>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/allowed_operations/EntityHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>AOBasicCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.AllowedOperationsCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AllowedOperationsCmp2Bean</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>number</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <query>
        <query-method>
          <method-name>findByLastName</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o FROM AllowedOperationsCmp2Bean o WHERE o.lastName = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>findEmptyCollection</method-name>
          <method-params/>
        </query-method>
        <ejb-ql>SELECT o FROM AllowedOperationsCmp2Bean o WHERE 1 = 0</ejb-ql>
      </query>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/EncBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>EncCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.EncCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <cmp-field>
        <field-name>primaryKey</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/cmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/cmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
        <ejb-link>BasicCmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/EncBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>EncCmp2Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.EncCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <env-entry>
        <env-entry-name>entity/cmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/cmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
        <ejb-link>BasicCmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/ContextLookupCmpBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>ContextLookupCmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.ContextLookupCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <cmp-field>
        <field-name>primaryKey</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/cmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/cmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/cmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.BasicCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.BasicCmpObject</remote>
        <ejb-link>BasicCmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/cmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>Cmp RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.RmiIiopCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.RmiIiopCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.RmiIiopCmpBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>1.x</cmp-version>
      <cmp-field>
        <field-name>primaryKey</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>primaryKey</primkey-field>
      <ejb-ref>
        <ejb-ref-name>cmp/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
        <ejb-link>EncCmpBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/cmp2/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>Cmp2 RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.entity.cmp.RmiIiopCmpHome</home>
      <remote>org.apache.openejb.test.entity.cmp.RmiIiopCmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.cmp.RmiIiopCmp2Bean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>firstName</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>lastName</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <ejb-ref>
        <ejb-ref-name>cmp/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.cmp.EncCmpHome</home>
        <remote>org.apache.openejb.test.entity.cmp.EncCmpObject</remote>
        <ejb-link>EncCmpBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ########################################################
    ######  CMR   T E S T   B E A N S  #####################
    ########################################################
    ########################################################
    -->

    <entity>
      <ejb-name>Person</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetoone.PersonLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetoone.PersonLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetoone.PersonBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Person</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.test.entity.cmr.onetoone.PersonPk</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(P) FROM Person P</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>License</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetoone.LicenseLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetoone.LicenseLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetoone.LicenseBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>License</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>number</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>points</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>notes</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.test.entity.cmr.onetoone.LicensePk</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(DL) FROM License DL</ejb-ql>
      </query>
    </entity>

    <entity>
      <ejb-name>Artist</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetomany.ArtistLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetomany.ArtistLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetomany.ArtistBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Artist</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.test.entity.cmr.onetomany.ArtistPk</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(A) FROM Artist A</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>Song</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetomany.SongLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetomany.SongLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetomany.SongBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Song</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>bpm</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>description</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.test.entity.cmr.onetomany.SongPk</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM Song B</ejb-ql>
      </query>
    </entity>

    <entity>
      <ejb-name>Game</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.manytomany.GameLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.manytomany.GameLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.manytomany.GameBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Game</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>rating</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.test.entity.cmr.manytomany.GamePk</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM Game B</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>Platform</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.manytomany.PlatformLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.manytomany.PlatformLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.manytomany.PlatformBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Platform</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>org.apache.openejb.test.entity.cmr.manytomany.PlatformPk</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM Platform B</ejb-ql>
      </query>
    </entity>

    <entity>
      <ejb-name>ComplexPerson</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetoone.PersonLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetoone.PersonLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetoone.PersonBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmr.onetoone.PersonPk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexPerson</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(P) FROM ComplexPerson P</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>ComplexLicense</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetoone.LicenseLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetoone.LicenseLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetoone.LicenseBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmr.onetoone.LicensePk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexLicense</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>number</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>points</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>notes</field-name>
      </cmp-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(DL) FROM ComplexLicense DL</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>ComplexArtist</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetomany.ArtistLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetomany.ArtistLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetomany.ArtistBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmr.onetomany.ArtistPk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexArtist</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(A) FROM ComplexArtist A</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>ComplexSong</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.onetomany.SongLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.onetomany.SongLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.onetomany.SongBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmr.onetomany.SongPk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexSong</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>bpm</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>description</field-name>
      </cmp-field>
      <query>
        <!-- CompondPK one-to-one shares the local home interface so we need to declare this useless finder -->
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM ComplexDish B</ejb-ql>
      </query>
    </entity>

    <entity>
      <ejb-name>ComplexGame</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.manytomany.GameLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.manytomany.GameLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.manytomany.GameBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmr.manytomany.GamePk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexGame</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>rating</field-name>
      </cmp-field>
      <query>
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM ComplexGame B</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>ComplexPlatform</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.manytomany.PlatformLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.manytomany.PlatformLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.manytomany.PlatformBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>org.apache.openejb.test.entity.cmr.manytomany.PlatformPk</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>ComplexPlatform</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>name</field-name>
      </cmp-field>
      <query>
        <query-method>
          <method-name>findByPrimaryKey</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT OBJECT(B) FROM ComplexPlatform B</ejb-ql>
      </query>
    </entity>

    <entity>
      <ejb-name>Query</ejb-name>
      <home>org.apache.openejb.test.entity.ejbql.QueryHome</home>
      <remote>org.apache.openejb.test.entity.ejbql.QueryRemote</remote>
      <local-home>org.apache.openejb.test.entity.ejbql.QueryLocalHome</local-home>
      <local>org.apache.openejb.test.entity.ejbql.QueryLocal</local>
      <ejb-class>org.apache.openejb.test.entity.ejbql.QueryBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Query</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <query-method>
          <method-name>ejbSelectSingleStringField</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.stringField FROM QueryData o WHERE o.stringField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleBooleanField</method-name>
          <method-params>
            <method-param>boolean</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.booleanField FROM QueryData o WHERE o.booleanField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleCharField</method-name>
          <method-params>
            <method-param>char</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.charField FROM QueryData o WHERE o.charField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleByteField</method-name>
          <method-params>
            <method-param>byte</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.byteField FROM QueryData o WHERE o.byteField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleShortField</method-name>
          <method-params>
            <method-param>short</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.shortField FROM QueryData o WHERE o.shortField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleIntField</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.intField FROM QueryData o WHERE o.intField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleLongField</method-name>
          <method-params>
            <method-param>long</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.longField FROM QueryData o WHERE o.longField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleFloatField</method-name>
          <method-params>
            <method-param>float</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.floatField FROM QueryData o WHERE o.floatField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleDoubleField</method-name>
          <method-params>
            <method-param>double</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT o.doubleField FROM QueryData o WHERE o.doubleField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionStringField</method-name>
        </query-method>
        <ejb-ql>SELECT o.stringField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionBooleanField</method-name>
        </query-method>
        <ejb-ql>SELECT o.booleanField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionCharField</method-name>
        </query-method>
        <ejb-ql>SELECT o.charField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionByteField</method-name>
        </query-method>
        <ejb-ql>SELECT o.byteField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionShortField</method-name>
        </query-method>
        <ejb-ql>SELECT o.shortField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionIntField</method-name>
        </query-method>
        <ejb-ql>SELECT o.intField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionLongField</method-name>
        </query-method>
        <ejb-ql>SELECT o.longField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionFloatField</method-name>
        </query-method>
        <ejb-ql>SELECT o.floatField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionDoubleField</method-name>
        </query-method>
        <ejb-ql>SELECT o.doubleField FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleLocalEjb</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT Object(o) FROM QueryData o WHERE o.intField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectSingleRemoteEjb</method-name>
          <method-params>
            <method-param>int</method-param>
          </method-params>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT Object(o) FROM QueryData o WHERE o.intField = ?1</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionLocalEjb</method-name>
        </query-method>
        <ejb-ql>SELECT Object(o) FROM QueryData o</ejb-ql>
      </query>
      <query>
        <query-method>
          <method-name>ejbSelectCollectionRemoteEjb</method-name>
        </query-method>
        <result-type-mapping>Remote</result-type-mapping>
        <ejb-ql>SELECT Object(o) FROM QueryData o</ejb-ql>
      </query>
    </entity>
    <entity>
      <ejb-name>QueryData</ejb-name>
      <home>org.apache.openejb.test.entity.ejbql.QueryDataHome</home>
      <remote>org.apache.openejb.test.entity.ejbql.QueryDataRemote</remote>
      <local-home>org.apache.openejb.test.entity.ejbql.QueryDataLocalHome</local-home>
      <local>org.apache.openejb.test.entity.ejbql.QueryDataLocal</local>
      <ejb-class>org.apache.openejb.test.entity.ejbql.QueryDataBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>QueryData</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>booleanField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>charField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>byteField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>shortField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>intField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>longField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>floatField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>doubleField</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>stringField</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
    </entity>

    <entity>
      <ejb-name>OneOwningSideBean</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.cmrmapping.OneOwningSideLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.cmrmapping.OneOwningSideLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.cmrmapping.OneOwningSideBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <!--<prim-key-class>org.apache.openejb.test.entity.cmr.cmrmapping.CompoundPK</prim-key-class>-->
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order1</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <!-- suppresses testing -->
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <entity>
      <ejb-name>OneInverseSideBean</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.cmrmapping.OneInverseSideLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.cmrmapping.OneInverseSideLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.cmrmapping.OneInverseSideBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order2</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <!-- suppresses testing -->
      <!-- incorrect mapping generated -->
      <!--
  <entity name="Order2" class="openejb.org.apache.openejb.test.entity.cmr.cmrmapping.Order2">
      <description>openejb-itests-beans.jar#OneInverseSideBean</description>
      <attributes>
          <id name="id"/>
          <one-to-many name="manyOwningSide" mapped-by="oneInverseSide"/>
          <one-to-one name="oneOwningSide" mapped-by="oneInverseSide"/>
      </attributes>
  </entity>
      -->
      <!-- error message:
      The type of field "openejb.org.apache.openejb.test.entity.cmr.cmrmapping.Order2.manyOwningSide" isn't supported by declared persistence strategy "OneToMany".  Please choose a different strategy.
      -->
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <entity>
      <ejb-name>ManyOwningSideBean</ejb-name>
      <local-home>org.apache.openejb.test.entity.cmr.cmrmapping.ManyOwningSideLocalHome</local-home>
      <local>org.apache.openejb.test.entity.cmr.cmrmapping.ManyOwningSideLocal</local>
      <ejb-class>org.apache.openejb.test.entity.cmr.cmrmapping.ManyOwningSideBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <!--<prim-key-class>org.apache.openejb.test.entity.cmr.cmrmapping.CompoundPK</prim-key-class>-->
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>Order3</abstract-schema-name>
      <cmp-field>
        <field-name>id</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>field1</field-name>
      </cmp-field>
      <primkey-field>id</primkey-field>
      <query>
        <query-method>
          <method-name>ejbSelectSomething</method-name>
          <method-params>
            <method-param>java.lang.Integer</method-param>
          </method-params>
        </query-method>
        <ejb-ql>SELECT m.oneInverseSide FROM Order m WHERE m.id = ?1</ejb-ql>
      </query>
      <!-- suppresses testing -->
      <persistence-context-ref>
        <persistence-context-ref-name>openejb/cmp</persistence-context-ref-name>
        <persistence-unit-name>cmp</persistence-unit-name>
      </persistence-context-ref>
    </entity>

    <!--
    ########################################################
    ########################################################
    ####  S T A T E F U L   S E S S I O N   B E A N S  #####
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/stateful/BasicStatefulHome
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with contianer-managed
        transaction demarcation that implements the
        javax.ejb.SessionSynchronization interface.
      </description>
      <ejb-name>BasicStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.BasicStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Container</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/BasicStatefulPojoHome
    ########################################################
    -->

    <session>
      <description>
        A basic stateful session pojo bean with container-managed transaction demarcation.
      </description>
      <ejb-name>BasicStatefulPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
      <local-home>org.apache.openejb.test.stateful.BasicStatefulLocalHome</local-home>
      <local>org.apache.openejb.test.stateful.BasicStatefulLocalObject</local>
      <ejb-class>org.apache.openejb.test.stateful.BasicStatefulPojoBean</ejb-class>
      <business-local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</business-local>
      <business-remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</business-remote>
      <local-bean/>
      <session-type>Stateful</session-type>
      <init-method>
        <bean-method>
          <method-name>create</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </bean-method>
      </init-method>
      <transaction-type>Container</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/BeanManagedBasicStatefulHome
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>Basic BMT StatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.BMTStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/BeanManagedTransactionTests/EJBHome
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>BMT StatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.BeanTxStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.BeanTxStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.BeanTxStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/EncBean
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>EncStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.EncStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessPojoBean</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/FieldInjectionStatefulBean
    ########################################################
    -->

    <session>
      <ejb-name>FieldInjectionStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessPojoBean</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.FieldInjectionStatefulBean</injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </session>


    <!--
    ########################################################
    ID:  client/tests/stateful/SetterInjectionStatefulBean
    ########################################################
    -->

    <session>
      <ejb-name>SetterInjectionStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessPojoBean</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statelessBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>statefulBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateful.SetterInjectionStatefulBean</injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/PersistenceContextStatefulBean
    ########################################################
    -->

    <session>
      <ejb-name>PersistenceContextStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.PersistenceContextStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.PersistenceContextStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.PersistenceContextStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/ContextLookupStatefulBean
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>ContextLookupStatefulBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.ContextLookupStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/ContextLookupStatefulPojoBean
    ########################################################
    -->

    <session>
      <description>A basic stateful session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>ContextLookupStatefulPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.ContextLookupStatefulPojoBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <init-method>
        <bean-method>
          <method-name>create</method-name>
          <method-params>
            <method-param>java.lang.String</method-param>
          </method-params>
        </bean-method>
      </init-method>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/ExtendedTestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <persistence-context-type>Extended</persistence-context-type>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateful/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <session>
      <description>
        The stateful bean for the RMI-IIOP Tests
      </description>
      <ejb-name>Stateful RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.stateful.RmiIiopStatefulHome</home>
      <remote>org.apache.openejb.test.stateful.RmiIiopStatefulObject</remote>
      <ejb-class>org.apache.openejb.test.stateful.RmiIiopStatefulBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>stateful/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.EncStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.EncStatefulObject</remote>
        <ejb-link>EncStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ########################################################
    ###  S T A T E L E S S   S E S S I O N   B E A N S  ####
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/stateless/BasicStatelessHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with contianer-managed
        transaction demarcation.
      </description>
      <ejb-name>BasicStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.BasicStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Container</transaction-type>
      <ejb-ref>
        <ejb-ref-name>TimerSyncBeanBusinessRemote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.beans.TimerSync</remote>
      </ejb-ref>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/BasicStatelessPojoHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session pojo bean with contianer-managed
        transaction demarcation.
      </description>
      <ejb-name>BasicStatelessPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
      <local-home>org.apache.openejb.test.stateless.BasicStatelessLocalHome</local-home>
      <local>org.apache.openejb.test.stateless.BasicStatelessLocalObject</local>
      <local-bean/>
      <business-local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</business-local>
      <business-remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</business-remote>
      <ejb-class>org.apache.openejb.test.stateless.BasicStatelessPojoBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Container</transaction-type>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/BeanManagedBasicStatelessHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>Basic BMT StatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.BasicStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>TimerSyncBeanBusinessRemote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.beans.TimerSync</remote>
      </ejb-ref>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tools/DatabaseHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>DatabaseBean</ejb-name>
      <home>org.apache.openejb.test.beans.DatabaseHome</home>
      <remote>org.apache.openejb.test.beans.Database</remote>
      <ejb-class>org.apache.openejb.test.beans.DatabaseBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/BeanManagedTransactionTests/EJBHome
    ########################################################
    -->

    <session>
      <description>A basic stateless session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>BMT StatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.BeanTxStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.BeanTxStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.BeanTxStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/EncBean
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the JNDI ENC tests
      </description>
      <ejb-name>EncStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.EncStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessPojoBean</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/FieldInjectionStatelessBean
    ########################################################
    -->

    <session>
      <ejb-name>FieldInjectionStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statelessHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statelessBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statelessBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessPojoBean</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statelessBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>statefulBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.FieldInjectionStatelessBean</injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </session>


    <!--
    ########################################################
    ID:  client/tests/stateless/SetterInjectionStatelessBean
    ########################################################
    -->

    <session>
      <ejb-name>SetterInjectionStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statelessHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statelessBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statelessBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessPojoBean</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statelessBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>statefulBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.stateless.SetterInjectionStatelessBean
          </injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/ContextLookupStatelessBean
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupStatelessBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.ContextLookupStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/ContextLookupStatelessPojoBean
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupStatelessPojoBean</ejb-name>
      <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.ContextLookupStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/stateless/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <session>
      <description>
        The stateless bean for the RMI-IIOP Tests
      </description>
      <ejb-name>Stateless RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.stateless.RmiIiopStatelessHome</home>
      <remote>org.apache.openejb.test.stateless.RmiIiopStatelessObject</remote>
      <ejb-class>org.apache.openejb.test.stateless.RmiIiopStatelessBean</ejb-class>
      <session-type>Stateless</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>stateless/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.EncStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.EncStatelessObject</remote>
        <ejb-link>EncStatelessBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ########################################################
    ######  BMP   E N T I T Y   B E A N S  #################
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/BasicBmpHome
    ########################################################
    -->

    <entity>
      <description>
        The EmployeeRecord entity bean encapsulates access
        to the employee records.The deployer will use
        container-managed persistence to integrate the
        entity bean with the back-end system managing
        the employee records.
      </description>
      <ejb-name>BasicBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.BasicBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/allowed_operations/EntityHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>AOBasicBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.AllowedOperationsBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/EncBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>EncBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.EncBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.EncBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.EncBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/bmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/ContextLookupBmpBean
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>ContextLookupBmpBean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.EncBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.EncBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.ContextLookupBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <env-entry>
        <env-entry-name>entity/bmp/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>entity/bmp/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>entity/bmp/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jdbc/basic/entityDatabase</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </entity>

    <!--
    ########################################################
    ID:  client/tests/entity/bmp/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <entity>
      <description>
        blah, blah, blah
      </description>
      <ejb-name>Bmp RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.entity.bmp.RmiIiopBmpHome</home>
      <remote>org.apache.openejb.test.entity.bmp.RmiIiopBmpObject</remote>
      <ejb-class>org.apache.openejb.test.entity.bmp.RmiIiopBmpBean</ejb-class>
      <persistence-type>Bean</persistence-type>
      <prim-key-class>java.lang.Integer</prim-key-class>
      <reentrant>false</reentrant>
      <primkey-field>primaryKey</primkey-field>
      <ejb-ref>
        <ejb-ref-name>bmp/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.EncBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.EncBmpObject</remote>
        <ejb-link>EncBmpBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </entity>

    <!--
    ########################################################
    ########################################################
    #########  MESSAGE   D R I V E N    B E A N S  #########
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/messagedriven/mdb/BasicMdbHome
    ########################################################
    -->

    <message-driven>
      <description>
        Blah blah blah . . .
      </description>
      <ejb-name>BasicMdbBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.BasicMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Container</transaction-type>
      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>BasicMdb</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>BasicMdb</activation-config-property-value>
        </activation-config-property>
      </activation-config>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </message-driven>

    <message-driven>
      <description>
        Blah blah blah . . .
      </description>
      <ejb-name>Basic BMT Mdb Bean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.BasicMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Bean</transaction-type>
      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>BasicBmtMdb</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>BasicBmtMdb</activation-config-property-value>
        </activation-config-property>
      </activation-config>
      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>stateless/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </message-driven>

    <message-driven>
      <description>
        The mdb bean for the JNDI ENC tests
      </description>
      <ejb-name>EncMdbBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.EncMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Bean</transaction-type>

      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>EncMdbBean</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>EncMdbBean</activation-config-property-value>
        </activation-config-property>
      </activation-config>

      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>mdbcontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.MessageDrivenContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </message-driven>

    <message-driven>
      <description>
        The mdb bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupMdbBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.ContextLookupMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Bean</transaction-type>

      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>ContextLookupMdbBean</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>ContextLookupMdbBean</activation-config-property-value>
        </activation-config-property>
      </activation-config>

      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>mdbcontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.MessageDrivenContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </message-driven>

    <message-driven>
      <description>
        Pojo mdb bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupMdbPojoBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.ContextLookupMdbPojoBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Bean</transaction-type>

      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>ContextLookupMdbPojoBean</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>ContextLookupMdbPojoBean</activation-config-property-value>
        </activation-config-property>
      </activation-config>

      <env-entry>
        <env-entry-name>stateless/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>stateless/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateless/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>mdbcontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.MessageDrivenContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
    </message-driven>

    <message-driven>
      <ejb-name>FieldInjectionMdbBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Bean</transaction-type>

      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>FieldInjectionMdbBean</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>FieldInjectionMdbBean</activation-config-property-value>
        </activation-config-property>
      </activation-config>

      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>statelessHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>statelessBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>statelessBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.FieldInjectionMdbBean</injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
    </message-driven>

    <message-driven>
      <ejb-name>SetterInjectionMdbBean</ejb-name>
      <ejb-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</ejb-class>
      <messaging-type>javax.jms.MessageListener</messaging-type>
      <transaction-type>Bean</transaction-type>

      <message-destination-type>javax.jms.Queue</message-destination-type>
      <message-destination-link>SetterInjectionMdbBean</message-destination-link>
      <activation-config>
        <activation-config-property>
          <activation-config-property-name>destination</activation-config-property-name>
          <activation-config-property-value>SetterInjectionMdbBean</activation-config-property-value>
        </activation-config-property>
      </activation-config>
      <env-entry>
        <env-entry-name>stateful/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>stateful/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateless.BasicStatelessHome</home>
        <remote>org.apache.openejb.test.stateless.BasicStatelessObject</remote>
        <ejb-link>BasicStatelessBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>statelessHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateless.BasicStatelessBusinessRemote</remote>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>statelessBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateless-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateless.BasicStatelessBusinessLocal</local>
        <ejb-link>BasicStatelessPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>statelessBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>stateful/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.mdb.SetterInjectionMdbBean</injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </message-driven>

    <!--
    ########################################################
    ########################################################
    ###  S I N G L E T O N   S E S S I O N   B E A N S  ####
    ########################################################
    ########################################################
    -->

    <!--
    ########################################################
    ID:  client/tests/singleton/BasicSingletonHome
    ########################################################
    -->

    <session>
      <description>A basic singleton session bean with contianer-managed
        transaction demarcation.
      </description>
      <ejb-name>BasicSingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.BasicSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Container</transaction-type>
      <ejb-ref>
        <ejb-ref-name>TimerSyncBeanBusinessRemote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.beans.TimerSync</remote>
      </ejb-ref>
      <env-entry>
        <env-entry-name>singleton/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>singleton/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/BasicSingletonPojoHome
    ########################################################
    -->

    <session>
      <description>A basic singleton session pojo bean with contianer-managed
        transaction demarcation.
      </description>
      <ejb-name>BasicSingletonPojoBean</ejb-name>
      <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
      <local-home>org.apache.openejb.test.singleton.BasicSingletonLocalHome</local-home>
      <local>org.apache.openejb.test.singleton.BasicSingletonLocalObject</local>
      <business-local>org.apache.openejb.test.singleton.BasicSingletonBusinessLocal</business-local>
      <business-remote>org.apache.openejb.test.singleton.BasicSingletonBusinessRemote</business-remote>
      <local-bean/>
      <ejb-class>org.apache.openejb.test.singleton.BasicSingletonPojoBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Container</transaction-type>
      <env-entry>
        <env-entry-name>singleton/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>singleton/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/BeanManagedBasicSingletonHome
    ########################################################
    -->

    <session>
      <description>A basic singleton session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>Basic BMT SingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.BasicSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>TimerSyncBeanBusinessRemote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.beans.TimerSync</remote>
      </ejb-ref>
      <env-entry>
        <env-entry-name>singleton/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <description>
          This is a reference to a JDBC database.
        </description>
        <res-ref-name>singleton/references/Resource_manager_access</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/BeanManagedTransactionTests/EJBHome
    ########################################################
    -->

    <session>
      <description>A basic singleton session bean with bean-managed
        transaction demarcation.
      </description>
      <ejb-name>BMT SingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.BeanTxSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.BeanTxSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.BeanTxSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>HighRoller</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/EncBean
    ########################################################
    -->

    <session>
      <description>
        The singleton bean for the JNDI ENC tests
      </description>
      <ejb-name>EncSingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.EncSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.EncSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.EncSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>singleton/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
        <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
        <ejb-link>BasicSingletonBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.singleton.BasicSingletonBusinessLocal</local>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.singleton.BasicSingletonPojoBean</local>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.singleton.BasicSingletonBusinessRemote</remote>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-local-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/FieldInjectionSingletonBean
    ########################################################
    -->

    <session>
      <ejb-name>FieldInjectionSingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.EncSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.EncSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>singleton/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
        <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
        <ejb-link>BasicSingletonBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>singletonHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.singleton.BasicSingletonBusinessRemote</remote>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>singletonBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.singleton.BasicSingletonBusinessLocal</local>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>singletonBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.singleton.BasicSingletonPojoBean</local>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>singletonBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>statefulBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.FieldInjectionSingletonBean</injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </session>


    <!--
    ########################################################
    ID:  client/tests/singleton/SetterInjectionSingletonBean
    ########################################################
    -->

    <session>
      <ejb-name>SetterInjectionSingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.EncSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.EncSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>
      <env-entry>
        <env-entry-name>singleton/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>booolean</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>striing</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>doouble</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>loong</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>flooat</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>inteeger</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>shoort</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>byyte</injection-target-name>
        </injection-target>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>chaaracter</injection-target-name>
        </injection-target>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>bmpHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>statefulHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
        <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
        <ejb-link>BasicSingletonBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>singletonHome</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.singleton.BasicSingletonBusinessRemote</remote>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>singletonBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-remote</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <remote>org.apache.openejb.test.stateful.BasicStatefulBusinessRemote</remote>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>statefulBusinessRemote</injection-target-name>
        </injection-target>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.singleton.BasicSingletonBusinessLocal</local>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>singletonBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-local</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulBusinessLocal</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>statefulBusinessLocal</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/singleton-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.singleton.BasicSingletonPojoBean</local>
        <ejb-link>BasicSingletonPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>singletonBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <ejb-local-ref>
        <ejb-ref-name>singleton/beanReferences/stateful-business-localbean</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <local>org.apache.openejb.test.stateful.BasicStatefulPojoBean</local>
        <ejb-link>BasicStatefulPojoBean</ejb-link>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>statefulBusinessLocalBean</injection-target-name>
        </injection-target>
      </ejb-local-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>daataSource</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>connectionFactory</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>coonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>queueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>queueCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-ref>
        <res-ref-name>topicConnectionFactory</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>topicCoonnectionFactory</injection-target-name>
        </injection-target>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>ejbContext</injection-target-name>
        </injection-target>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>em</injection-target-name>
        </injection-target>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
        <injection-target>
          <injection-target-class>org.apache.openejb.test.singleton.SetterInjectionSingletonBean
          </injection-target-class>
          <injection-target-name>emf</injection-target-name>
        </injection-target>
      </persistence-unit-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/ContextLookupSingletonBean
    ########################################################
    -->

    <session>
      <description>
        The singleton bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupSingletonBean</ejb-name>
      <home>org.apache.openejb.test.singleton.EncSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.EncSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.ContextLookupSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>singleton/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
        <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
        <ejb-link>BasicSingletonBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/ContextLookupSingletonPojoBean
    ########################################################
    -->

    <session>
      <description>
        The singleton bean for the JNDI ENC tests
      </description>
      <ejb-name>ContextLookupSingletonPojoBean</ejb-name>
      <home>org.apache.openejb.test.singleton.EncSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.EncSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.ContextLookupSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>


      <env-entry>
        <env-entry-name>singleton/references/JNDI_access_to_java_comp_env</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>Success</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Boolean</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>true</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/String</env-entry-name>
        <env-entry-type>java.lang.String</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Double</env-entry-name>
        <env-entry-type>java.lang.Double</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Long</env-entry-name>
        <env-entry-type>java.lang.Long</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Float</env-entry-name>
        <env-entry-type>java.lang.Float</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Integer</env-entry-name>
        <env-entry-type>java.lang.Integer</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Short</env-entry-name>
        <env-entry-type>java.lang.Short</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Byte</env-entry-name>
        <env-entry-type>java.lang.Byte</env-entry-type>
        <env-entry-value>1</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>singleton/references/Character</env-entry-name>
        <env-entry-type>java.lang.Character</env-entry-type>
        <env-entry-value>D</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/Enterprise_bean_access</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/bmp_entity</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <home>org.apache.openejb.test.entity.bmp.BasicBmpHome</home>
        <remote>org.apache.openejb.test.entity.bmp.BasicBmpObject</remote>
        <ejb-link>BasicBmpBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/stateful</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.stateful.BasicStatefulHome</home>
        <remote>org.apache.openejb.test.stateful.BasicStatefulObject</remote>
        <ejb-link>BasicStatefulBean</ejb-link>
      </ejb-ref>
      <ejb-ref>
        <ejb-ref-name>singleton/beanReferences/singleton</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.singleton.BasicSingletonHome</home>
        <remote>org.apache.openejb.test.singleton.BasicSingletonObject</remote>
        <ejb-link>BasicSingletonBean</ejb-link>
      </ejb-ref>
      <resource-ref>
        <res-ref-name>datasource</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>jms</res-ref-name>
        <res-type>javax.jms.ConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>QueueCF</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-ref>
        <res-ref-name>TopicCF</res-ref-name>
        <res-type>javax.jms.TopicConnectionFactory</res-type>
        <res-auth>Container</res-auth>
      </resource-ref>
      <resource-env-ref>
        <resource-env-ref-name>sessioncontext</resource-env-ref-name>
        <resource-env-ref-type>javax.ejb.SessionContext</resource-env-ref-type>
      </resource-env-ref>
      <persistence-context-ref>
        <description>
          Persistence context for testing the functionality.
        </description>
        <persistence-context-ref-name>persistence/TestContext</persistence-context-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-context-ref>
      <persistence-unit-ref>
        <description>
          Persistence unit for testing the functionality.
        </description>
        <persistence-unit-ref-name>persistence/TestUnit</persistence-unit-ref-name>
        <persistence-unit-name>openjpa-test-unit</persistence-unit-name>
      </persistence-unit-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>

    <!--
    ########################################################
    ID:  client/tests/singleton/RMI-over-IIOP/EJBHome
    ########################################################
    -->

    <session>
      <description>
        The singleton bean for the RMI-IIOP Tests
      </description>
      <ejb-name>Singleton RMI-IIOP Bean</ejb-name>
      <home>org.apache.openejb.test.singleton.RmiIiopSingletonHome</home>
      <remote>org.apache.openejb.test.singleton.RmiIiopSingletonObject</remote>
      <ejb-class>org.apache.openejb.test.singleton.RmiIiopSingletonBean</ejb-class>
      <session-type>Singleton</session-type>
      <transaction-type>Bean</transaction-type>
      <ejb-ref>
        <ejb-ref-name>singleton/rmi-iiop/home</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>org.apache.openejb.test.singleton.EncSingletonHome</home>
        <remote>org.apache.openejb.test.singleton.EncSingletonObject</remote>
        <ejb-link>EncSingletonBean</ejb-link>
      </ejb-ref>
      <security-role-ref>
        <role-name>TheMan</role-name>
        <role-link>Executive</role-link>
      </security-role-ref>
    </session>


  </enterprise-beans>

  <interceptors>
    <interceptor>
      <interceptor-class>
        org.apache.openejb.test.interceptor.SecondClassInterceptor
      </interceptor-class>
    </interceptor>
    <interceptor>
      <interceptor-class>
        org.apache.openejb.test.interceptor.DDInterceptor
      </interceptor-class>
      <around-invoke>
        <method-name>ddInterceptor</method-name>
      </around-invoke>
      <post-construct>
        <lifecycle-callback-method>
          ddInterceptorPostConstruct
        </lifecycle-callback-method>
      </post-construct>
      <pre-destroy>
        <lifecycle-callback-method>
          ddInterceptorPreDestroy
        </lifecycle-callback-method>
      </pre-destroy>
      <post-activate>
        <lifecycle-callback-method>
          ddInterceptorPostActivate
        </lifecycle-callback-method>
      </post-activate>
      <pre-passivate>
        <lifecycle-callback-method>
          ddInterceptorPrePassivate
        </lifecycle-callback-method>
      </pre-passivate>
    </interceptor>
  </interceptors>

  <relationships>

    <!-- One to One -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>License</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>person</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>Person</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>license</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <!-- One to Many -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>Artist</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>performed</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>Song</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>performer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <!-- One to Many non cascade -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>Artist</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>composed</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>Song</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>composer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <!-- Many to Many -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>Game</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>platforms</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>Platform</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>games</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <!-- Complex One to One -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>ComplexLicense</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>person</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>ComplexPerson</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>license</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>


    <!-- Complex One to Many -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>ComplexArtist</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>performed</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>ComplexSong</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>performer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <!-- Complex One to Many non cascade -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>ComplexArtist</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>composed</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>ComplexSong</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>composer</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <!-- Complex Many to Many -->
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>ComplexGame</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>platforms</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <cascade-delete/>
        <relationship-role-source>
          <ejb-name>ComplexPlatform</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>games</cmr-field-name>
          <cmr-field-type>java.util.Set</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>

    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneOwningSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>oneInverseSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneInverseSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>oneOwningSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
    <ejb-relation>
      <ejb-relationship-role>
        <multiplicity>Many</multiplicity>
        <relationship-role-source>
          <ejb-name>ManyOwningSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>oneInverseSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <multiplicity>One</multiplicity>
        <relationship-role-source>
          <ejb-name>OneInverseSideBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <cmr-field-name>manyOwningSide</cmr-field-name>
        </cmr-field>
      </ejb-relationship-role>
    </ejb-relation>
  </relationships>


  <assembly-descriptor>
    <security-role>
      <description>The description</description>
      <role-name>Teller</role-name>
    </security-role>
    <security-role>
      <description>The description</description>
      <role-name>Manager</role-name>
    </security-role>
    <security-role>
      <description>The description</description>
      <role-name>Accountant</role-name>
    </security-role>
    <security-role>
      <description>The description</description>
      <role-name>Executive</role-name>
    </security-role>

    <container-transaction>
      <method>
        <ejb-name>BasicStatefulBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>BasicStatelessBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>BasicCmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AOBasicCmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>EncCmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Cmp RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <!-- CMR Test Beans -->
    <container-transaction>
      <method>
        <ejb-name>Person</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>License</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Artist</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Song</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Game</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Platform</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ComplexPerson</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ComplexLicense</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ComplexArtist</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ComplexSong</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ComplexGame</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ComplexPlatform</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneOwningSideBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>OneInverseSideBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>ManyOwningSideBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>EncStatefulBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>Stateful RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>DatabaseBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>EncStatelessBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>Stateless RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>BasicBmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AOBasicBmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>EncBmpBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>Bmp RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>BasicMdbBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>BasicSingletonBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>EncSingletonBean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Supports</trans-attribute>
    </container-transaction>

    <container-transaction>
      <method>
        <ejb-name>Singleton RMI-IIOP Bean</ejb-name>
        <method-name>*</method-name>
      </method>
      <trans-attribute>Never</trans-attribute>
    </container-transaction>

    <!-- test01_interceptorChaining
    to test specifying an interceptor from a DD at the method level.
    It should be invoked only after any method level interceptors defined by annotations on that method.
    -->
    <interceptor-binding>
      <ejb-name>BasicStatefulIntercepted</ejb-name>
      <interceptor-class>
        org.apache.openejb.test.interceptor.DDInterceptor
      </interceptor-class>
      <method>
        <method-name>reverse</method-name>
      </method>
    </interceptor-binding>

    <!-- test04_excludeClassInterceptors_02 to test exclude-class-interceptor on a method level -->
    <interceptor-binding>
      <ejb-name>BasicStatefulIntercepted</ejb-name>
      <exclude-class-interceptors>true</exclude-class-interceptors>
      <method>
        <method-name>concat</method-name>
      </method>
    </interceptor-binding>


    <!--  test01_interceptorChaining
    This interceptor applies and also changes the order of class level interceptors invoked on BasicStatelessIntercepted.
    -->
    <interceptor-binding>
      <ejb-name>BasicStatelessIntercepted</ejb-name>
      <interceptor-order>
        <interceptor-class>
          org.apache.openejb.test.interceptor.DDInterceptor
        </interceptor-class>
        <interceptor-class>
          org.apache.openejb.test.interceptor.SecondClassInterceptor
        </interceptor-class>
        <interceptor-class>
          org.apache.openejb.test.interceptor.ClassInterceptor
        </interceptor-class>
      </interceptor-order>
    </interceptor-binding>

    <!-- test04_excludeClassInterceptors_02 to test exclude-class-interceptor on a method level -->
    <interceptor-binding>
      <ejb-name>BasicStatelessIntercepted</ejb-name>
      <exclude-class-interceptors>true</exclude-class-interceptors>
      <method>
        <method-name>concat</method-name>
      </method>
    </interceptor-binding>


    <!--  test01_interceptorChaining
    This interceptor applies and also changes the order of class level interceptors invoked on BasicSingletonIntercepted.
    -->
    <interceptor-binding>
      <ejb-name>BasicSingletonIntercepted</ejb-name>
      <interceptor-order>
        <interceptor-class>
          org.apache.openejb.test.interceptor.DDInterceptor
        </interceptor-class>
        <interceptor-class>
          org.apache.openejb.test.interceptor.SecondClassInterceptor
        </interceptor-class>
        <interceptor-class>
          org.apache.openejb.test.interceptor.ClassInterceptor
        </interceptor-class>
      </interceptor-order>
    </interceptor-binding>

    <!-- test04_excludeClassInterceptors_02 to test exclude-class-interceptor on a method level -->
    <interceptor-binding>
      <ejb-name>BasicSingletonIntercepted</ejb-name>
      <exclude-class-interceptors>true</exclude-class-interceptors>
      <method>
        <method-name>concat</method-name>
      </method>
    </interceptor-binding>

    <message-destination>
      <message-destination-name>BasicMdb</message-destination-name>
    </message-destination>
    <message-destination>
      <message-destination-name>BasicBmtMdb</message-destination-name>
    </message-destination>
    <message-destination>
      <message-destination-name>EncMdbBean</message-destination-name>
    </message-destination>
    <message-destination>
      <message-destination-name>ContextLookupMdbBean</message-destination-name>
    </message-destination>
    <message-destination>
      <message-destination-name>ContextLookupMdbPojoBean</message-destination-name>
    </message-destination>
    <message-destination>
      <message-destination-name>FieldInjectionMdbBean</message-destination-name>
    </message-destination>
    <message-destination>
      <message-destination-name>SetterInjectionMdbBean</message-destination-name>
    </message-destination>
  </assembly-descriptor>
</ejb-jar>
